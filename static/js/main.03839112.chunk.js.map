{"version":3,"sources":["components/FeedBack.module.css","components/FeedbackOptions.jsx","components/Statistic.jsx","components/Notification.jsx","components/Section.jsx","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","className","style","button","type","onClick","addGood","addNeutral","addBad","Statistic","good","neutral","bad","total","positivePercentage","title","resultString","Notification","message","Section","App","state","setState","prevState","this","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,OAAS,yBAAyB,aAAe,iC,wLCGpF,SAASC,EAAT,GAAuC,IAAZC,EAAW,EAAXA,QAClC,OAAO,qCACC,wBAAQC,UAAWC,IAAMC,OAAQC,KAAK,SAASC,QAASL,EAAQM,QAAhE,kBACA,wBAAQL,UAAWC,IAAMC,OAAQC,KAAK,SAASC,QAASL,EAAQO,WAAhE,qBACA,wBAAQN,UAAWC,IAAMC,OAAQC,KAAK,SAASC,QAASL,EAAQQ,OAAhE,oBCJD,SAASC,EAAT,GAAuE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAE3D,OAAO,qCACH,qBAAKb,UAAWC,IAAMa,MAAtB,uBACA,sBAAKd,UAAWC,IAAMc,aAAtB,kBAA0CN,KAC1C,sBAAKT,UAAWC,IAAMc,aAAtB,qBAA6CL,KAC7C,sBAAKV,UAAWC,IAAMc,aAAtB,iBAAyCJ,KACzC,sBAAKX,UAAWC,IAAMc,aAAtB,mBAA2CH,KAC3C,sBAAKZ,UAAWC,IAAMc,aAAtB,sBAA8CF,GAA0C,QCRjF,SAASG,EAAT,GAAkC,IAAXC,EAAU,EAAVA,QACpC,OAAO,qBAAKjB,UAAWC,IAAMc,aAAtB,SAAqCE,ICE/B,SAASC,EAAT,GAAqF,IAAlEJ,EAAiE,EAAjEA,MAAOf,EAA0D,EAA1DA,QAASU,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBACzE,OAAO,qCACH,oBAAIb,UAAWC,IAAMa,MAArB,SAA6BA,IAC7B,cAAChB,EAAD,CACIC,QAASA,IAEXU,GAAQC,GAAWC,EAChB,cAACH,EAAD,CACGC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IACvB,cAACG,EAAD,CAAcC,QAAQ,yB,ICd7BE,E,4MACJC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPN,QAAU,WAAQ,EAAKgB,UAAS,SAAAC,GAAS,MAAK,CAAEb,KAAMa,EAAUb,KAAO,O,EAEvEH,WAAa,WAAQ,EAAKe,UAAS,SAAAC,GAAS,MAAK,CAAEZ,QAASY,EAAUZ,QAAU,O,EAEhFH,OAAS,WAAQ,EAAKc,UAAS,SAAAC,GAAS,MAAK,CAAEX,IAAKW,EAAUX,IAAM,O,4CAGpE,WAEE,MAA+BY,KAAKH,MAA5BX,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEjBa,EAAqBf,EAAOC,EAAUC,EAEtCc,EAAkCC,KAAKC,MAAMlB,EAAOe,EAAqB,KAG/E,OAAQ,mCACN,cAACN,EAAD,CACEJ,MAAO,wBACPf,QAASwB,KACTd,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOY,EACPX,mBAAoBY,U,GA/BVG,aAsCHT,ICtCfU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.03839112.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"FeedBack_title__32u9S\",\"button\":\"FeedBack_button__29O8L\",\"resultString\":\"FeedBack_resultString__3CLuz\"};","import style from \"./FeedBack.module.css\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function FeedbackOptions({ options }) {\r\n        return <>\r\n                <button className={style.button} type=\"button\" onClick={options.addGood}>Good</button>\r\n                <button className={style.button} type=\"button\" onClick={options.addNeutral}>Neutral</button>\r\n                <button className={style.button} type=\"button\" onClick={options.addBad}>Bad</button>\r\n        </>;\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n        options: PropTypes.object.isRequired\r\n};","import style from \"./FeedBack.module.css\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Statistic({ good, neutral, bad, total, positivePercentage }) {\r\n    \r\n    return <>\r\n        <div className={style.title}>Statistic</div>\r\n        <div className={style.resultString}>Good:{good}</div>\r\n        <div className={style.resultString}>Neutral:{neutral}</div>\r\n        <div className={style.resultString}>Bad:{bad}</div>\r\n        <div className={style.resultString}>Total:{total}</div>\r\n        <div className={style.resultString}>Positive:{positivePercentage ? positivePercentage : 0}</div>\r\n    </>;\r\n}\r\n\r\n\r\nStatistic.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n};","import style from \"./FeedBack.module.css\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Notification({message}) {\r\n  return <div className={style.resultString}>{message}</div>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired\r\n};\r\n\r\n","import React from \"react\";\r\nimport style from \"./FeedBack.module.css\";\r\nimport FeedbackOptions from \"./FeedbackOptions\";\r\nimport Statistics from \"./Statistic\";\r\nimport Notification from \"./Notification\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Section({ title, options, good, neutral, bad, total, positivePercentage }) {\r\n    return <>\r\n        <h2 className={style.title}>{title}</h2>\r\n        <FeedbackOptions\r\n            options={options}\r\n        />\r\n        {(good || neutral || bad) ?\r\n            (<Statistics\r\n                good={good}\r\n                neutral={neutral}\r\n                bad={bad}\r\n                total={total}\r\n                positivePercentage={positivePercentage} />) :\r\n            (<Notification message=\"No feedback given\" />)\r\n        }\r\n    </>;\r\n\r\n}\r\n\r\n\r\nSection.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    options:PropTypes.object.isRequired\r\n};","\r\nimport React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Section from \"./components/Section\";\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0\r\n  };\r\n\r\n  addGood = () => { this.setState(prevState => ({ good: prevState.good + 1 })); };\r\n\r\n  addNeutral = () => { this.setState(prevState => ({ neutral: prevState.neutral + 1 })); };\r\n\r\n  addBad = () => { this.setState(prevState => ({ bad: prevState.bad + 1 })); };\r\n\r\n\r\n  render() {\r\n\r\n    const { good, neutral, bad } = this.state;\r\n\r\n    const countTotalFeedback = good + neutral + bad;\r\n\r\n    const countPositiveFeedbackPercentage = Math.round(good / countTotalFeedback * 100);\r\n\r\n\r\n    return (<>\r\n      <Section\r\n        title={\"Please leave feedback\"}\r\n        options={this}\r\n        good={good}\r\n        neutral={neutral}\r\n        bad={bad}\r\n        total={countTotalFeedback}\r\n        positivePercentage={countPositiveFeedbackPercentage}\r\n      />\r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n"],"sourceRoot":""}